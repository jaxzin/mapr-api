<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
              http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true" entry-point-ref="gaeEntryPoint">
    	<!--<form-login login-processing-url="/j_spring_security_check" />-->
        <!--<logout logout-url="/j_spring_security_logout"/>-->
        
        <!-- Configure these elements to secure URIs in your application -->
<!--        
        <intercept-url pattern="/member/**" access="isAuthenticated()" /> -->
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/logout" access="permitAll" />
        <intercept-url pattern="/register*" access="hasRole('NEW_USER')" />
        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
        <intercept-url pattern="/**" access="hasRole('USER')"/>
        <custom-filter position="PRE_AUTH_FILTER" ref="gaeFilter" />
    </http>

    <beans:bean id="gaeEntryPoint" class="us.mapr.gae.security.GoogleAccountsAuthenticationEntryPoint"/>

    <beans:bean id="gaeFilter" class="us.mapr.gae.security.GaeAuthenticationFilter">
       <beans:property name="authenticationManager" ref="authenticationManager"/>
       <beans:property name="failureHandler">
           <beans:bean class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
               <beans:property name="exceptionMappings">
                   <beans:map>
                       <beans:entry key="org.springframework.security.authentication.DisabledException" value="/disabled.htm" />
                   </beans:map>
               </beans:property>
           </beans:bean>
       </beans:property>
   </beans:bean>

	<!-- Configure Authentication mechanism -->
   <authentication-manager alias="authenticationManager">
       <authentication-provider ref="gaeAuthenticationProvider"/>
   </authentication-manager>

   <beans:bean id="gaeAuthenticationProvider" class="us.mapr.gae.security.GoogleAccountsAuthenticationProvider">
       <beans:property name="userRegistry" ref="userRegistry" />
   </beans:bean>

   <beans:bean id="userRegistry" class="us.mapr.users.GaeDatastoreUserRegistry" />

    <!-- OAuth 1.0 Support -->
    <!--<beans:bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.InMemoryOAuth2ProviderTokenServices">-->
      <!--<beans:property name="supportRefreshToken" value="true"/>-->
    <!--</beans:bean>-->

    <!--<oauth:provider client-details-service-ref="clientDetails" token-services-ref="tokenServices" >-->
      <!--<oauth:verification-code user-approval-page="/oauth/confirm_access"/>-->
    <!--</oauth:provider>-->

    <!--<oauth:client-details-service id="clientDetails">-->
      <!--<oauth:client clientId="my-trusted-client" authorizedGrantTypes="password,authorization_code,refresh_token"/>-->
      <!--<oauth:client clientId="my-less-trusted-client" authorizedGrantTypes="authorization_code"/>-->
      <!--<oauth:client clientId="tonr" authorizedGrantTypes="authorization_code"/>-->
    <!--</oauth:client-details-service>-->

    <!-- OAuth 2.0 Support -->
    <!--apply the oauth client context-->
    <oauth:client/>

    <!--define an oauth 2 resource for sparklr-->
    <!--<oauth:resource id="sparklr" type="authorization_code" clientId="tonr"-->
    <!--accessTokenUri="http://localhost:8080/sparklr/oauth/authorize"-->
    <!--userAuthorizationUri="http://localhost:8080/sparklr/oauth/user/authorize"/>-->

    <!--define an oauth 2 resource for facebook. according to the facebook docs, the 'clientId' is the App ID, and the 'clientSecret' is the App Secret -->
    <oauth:resource id="facebook" type="authorization_code" clientId="213276462022800"
                    clientSecret="8c6cb0f724bb1f4dbdec80b4f1ddb30a"
                    bearerTokenMethod="query" bearerTokenName="access_token"
                    accessTokenUri="https://graph.facebook.com/oauth/access_token"
                    userAuthorizationUri="https://graph.facebook.com/oauth/authorize"/>

    <!--define an oauth 2 resource for google. This info is registered here: https://code.google.com/apis/console/ -->
    <oauth:resource id="google" type="authorization_code" clientId="815656025636.apps.googleusercontent.com"
                    clientSecret="5BFkVXAjIvJRwRfJ4Wyl6lnj"
                    accessTokenUri="https://accounts.google.com/o/oauth2/token"
                    userAuthorizationUri="https://accounts.google.com/o/oauth2/auth?scope=https://www.google.com/m8/feeds/"/>

</beans:beans>