<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    version="2.5">
    <!-- for spring security <web-app xmlns="http://java.sun.com/xml/ns/javaee" version="2.5">-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:META-INF/spring/applicationContext*.xml</param-value>
    </context-param>
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!-- end for spring security -->
    <servlet>
        <servlet-name>GroovletServlet</servlet-name>
        <servlet-class>groovyx.gaelyk.GaelykServlet</servlet-class>
        <init-param>
           <param-name>verbose</param-name>
            <!-- Set it to true for more details -->
           <param-value>false</param-value>
       </init-param>
    </servlet>
    <servlet>
        <servlet-name>TemplateServlet</servlet-name>
        <servlet-class>groovyx.gaelyk.GaelykTemplateServlet</servlet-class>
        <init-param>
            <!-- Remove the default "generated by" messages from the templates -->
           <param-name>generated.by</param-name>
           <param-value>false</param-value>
       </init-param>
       <init-param>
           <param-name>verbose</param-name>
           <!-- Output generation time in the HTML, see source page -->
           <param-value>false</param-value>
       </init-param>
    </servlet>
    <servlet>
        <servlet-name>messages</servlet-name>
        <servlet-class>
            us.mapr.gae.example.web.MessagesServiceImpl
        </servlet-class>
    </servlet>
    <!-- Uncomment the following servlet definition if you want to receive XMPP messages-->
    <!--
    <servlet>
        <servlet-name>XmppServlet</servlet-name>
        <servlet-class>groovyx.gaelyk.GaelykXmppServlet</servlet-class>
    </servlet>
    -->
    <!-- Uncomment the following servlet definition if you want to receive incoming email messages-->
    <!--
    <servlet>
        <servlet-name>IncomingEmailServlet</servlet-name>
        <servlet-class>groovyx.gaelyk.GaelykIncomingEmailServlet</servlet-class>
    </servlet>
    -->
    <!-- Uncomment this servlet filter if you want to enable URL routing -->
    <filter>
        <filter-name>RoutesFilter</filter-name>
        <filter-class>groovyx.gaelyk.routes.RoutesFilter</filter-class>
    </filter>

    <servlet-mapping>
        <servlet-name>GroovletServlet</servlet-name>
        <url-pattern>*.groovy</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TemplateServlet</servlet-name>
        <url-pattern>*.gtpl</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>messages</servlet-name>
        <url-pattern>/messages/messages</url-pattern>
    </servlet-mapping>
    <!-- Uncomment the following servlet mapping if you want to receive XMPP messages-->
    <!--
    <servlet-mapping>
        <servlet-name>XmppServlet</servlet-name>
        <url-pattern>/_ah/xmpp/message/chat/</url-pattern>
    </servlet-mapping>
    -->
    <!-- Uncomment the following servlet mapping if you want to receive incoming email messages-->
    <!--
    <servlet-mapping>
        <servlet-name>IncomingEmailServlet</servlet-name>
        <url-pattern>/_ah/mail/*</url-pattern>
    </servlet-mapping>
    -->

    <!-- Uncomment the following filter mapping if you want to enable URL routing -->
    <filter-mapping>
        <filter-name>RoutesFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
     <!-- for spring security -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- end for spring security -->
    <!-- Uncomment the following security constraint if you want to secure your incoming email endpoint -->
    <!-- Only allow the SDK and administrators to have access to the incoming email endpoint -->
    <!--
    <security-constraint>
        <web-resource-collection>
            <url-pattern>/_ah/mail/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    -->
    <!-- for spring security -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- end for spring security -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.gtpl</welcome-file>
    </welcome-file-list>
</web-app>